<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[Oak_Zmm的技术博客]]></title>
  <subtitle><![CDATA[你信不信，我这都是瞎写的。]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://oakzmm.com//"/>
  <updated>2015-07-16T08:53:52.736Z</updated>
  <id>http://oakzmm.com//</id>
  
  <author>
    <name><![CDATA[Oak_Zmm]]></name>
    <email><![CDATA[macouen@gmail.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[常用的Android studio的live templates汇总]]></title>
    <link href="http://oakzmm.com/2015/07/16/live-templates/"/>
    <id>http://oakzmm.com/2015/07/16/live-templates/</id>
    <published>2015-07-16T08:47:27.000Z</published>
    <updated>2015-07-16T08:53:52.736Z</updated>
    <content type="html"><![CDATA[<p><em>Android studio 默认的是按Tab 自动生成代码块的，用户可以自己在setting—&gt;Live Templates里面进行设置expand style</em></p>
<h2 id="下面是一常用的Live_Templates的汇总说明">下面是一常用的Live Templates的汇总说明</h2><a id="more"></a>
<ul>
<li><h4 id="输出打印_Groovy(常规部分)">输出打印  Groovy(常规部分)</h4></li>
</ul>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">serr ---&gt;<span class="constant">System.</span>err.println(<span class="string">"example"</span>)</span><br><span class="line">souf ---&gt;printf <span class="string">"example"</span></span><br><span class="line">sout ---&gt;println <span class="string">"example"</span></span><br><span class="line">soutm ---&gt;<span class="constant">System.</span>out.println(<span class="string">"MainActivity.onCreate"</span>);<span class="regexp">//</span>当前类的当前方法名</span><br><span class="line">soutp ---&gt;<span class="constant">System.</span>out.println(<span class="string">"savedInstanceState = ["</span> + savedInstanceState + <span class="string">"]"</span>);<span class="regexp">//</span>这个好，可以打印出当前方法的所有参数列表及其值</span><br><span class="line">soutv ---&gt;<span class="constant">System.</span>out.println(<span class="string">"params"</span>,params);<span class="regexp">//</span>即 你可以输出打印一个变量值</span><br></pre></td></tr></table></figure>
<ul>
<li><h4 id="常规的代码块儿">常规的代码块儿</h4></li>
</ul>
<figure class="highlight nimrod"><table><tr><td class="code"><pre><span class="line"><span class="type">Iteractions</span>---&gt;//快速生成代码块儿</span><br><span class="line">fori ---&gt;<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ; i++) &#123;&#125;</span><br><span class="line">itar ---&gt;<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="type">Array</span>.length; i++) &#123; <span class="type">int</span> i1 = <span class="type">Array</span>[i];&#125;//遍历数组</span><br><span class="line">itco ---&gt;<span class="keyword">for</span> (<span class="type">Iterator</span> <span class="keyword">iterator</span> = collection.<span class="keyword">iterator</span>(); <span class="keyword">iterator</span>.hasNext(); ) &#123;</span><br><span class="line"><span class="type">Object</span> next = <span class="keyword">iterator</span>.next();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><h4 id="这个是遍历一个容器变量的，直接让容器返回一个iterator进行遍历">这个是遍历一个容器变量的，直接让容器返回一个iterator进行遍历</h4></li>
</ul>
<figure class="highlight nimrod"><table><tr><td class="code"><pre><span class="line">iten ---&gt;<span class="keyword">while</span> (枚举类.hasMoreElements()) &#123; <span class="type">Object</span> nextElement = 枚举类.nextElement(); &#125;//enumeration 是一个枚举类接口来着。遍历枚举内容</span><br><span class="line">iter ---&gt;<span class="keyword">for</span> (<span class="type">int</span> i : <span class="type">FOCUSED_STATE_SET</span>) <span class="decorator">&#123;...&#125;</span>//遍历选中状态下的<span class="type">set</span></span><br><span class="line">itit ---&gt;<span class="keyword">while</span> (<span class="keyword">iterator</span>.hasNext()) &#123; <span class="type">Object</span> next = <span class="keyword">iterator</span>.next(); &#125;//获取到了迭代器对象后，对迭代器进行遍历操作</span><br><span class="line">itli ---&gt;<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123; <span class="type">Object</span> o = list.get(i); &#125;//遍历list对象里面的内容</span><br><span class="line">ritar ---&gt;<span class="keyword">for</span> (<span class="type">int</span> i = <span class="type">Array</span>.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123; <span class="type">int</span> i1 = <span class="type">FOCUSED_STATE_SET</span>[i]; &#125;//倒叙遍历数组</span><br></pre></td></tr></table></figure>
<ul>
<li><h4 id="其他的（综合）">其他的（综合）</h4></li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">geti ---&gt;public <span class="keyword">static</span> MainActivity getInstance() &#123; <span class="keyword">return</span> ; &#125;<span class="comment">//获取到当前的实例 的代码模板</span></span><br><span class="line">ifn ---&gt;if (某变量 == <span class="keyword">null</span>) &#123;....&#125;<span class="comment">//生成if null代码块儿</span></span><br><span class="line">inn ---&gt;if (某变量 != <span class="keyword">null</span>) &#123;....&#125;<span class="comment">//生成if not null代码块儿</span></span><br><span class="line">inst ---&gt;if (<span class="variable">$EXPR</span>$ <span class="keyword">instanceof</span> <span class="variable">$TYPE</span>$) &#123; <span class="variable">$TYPE</span>$ <span class="variable">$VAR1</span>$ = (<span class="variable">$TYPE</span>$)<span class="variable">$EXPR</span>$; <span class="variable">$END</span>$ &#125;<span class="comment">//判断某变量是不是某个类的实例对象</span></span><br><span class="line">lazy ---&gt;if (savedInstanceState == <span class="keyword">null</span>) &#123; savedInstanceState = <span class="keyword">new</span> Bundle(); &#125;<span class="comment">//执行延迟初始化，就是对象直到用的时候才进行初始化操作</span></span><br><span class="line">mn ---&gt;var1 = Math.min(var2,var3);<span class="comment">//得到比较两个变量值小的代码块</span></span><br><span class="line">mx ---&gt;var1 = Math.max(var2,var3);<span class="comment">//得到比较两个变量值大的代码块</span></span><br><span class="line">psvm ---&gt;public <span class="keyword">static</span> void main(String[] args)&#123; 。。。。 &#125;<span class="comment">//生成一个main()函数的代码块</span></span><br><span class="line">toar ---&gt;something.toArray(<span class="keyword">new</span> collection[collection.size()])<span class="comment">//这个是生成一个代码块用于把collection的对象存储到一个数组里面去</span></span><br></pre></td></tr></table></figure>
<ul>
<li><h4 id="普通的代码（修饰符部分的）">普通的代码（修饰符部分的）</h4></li>
</ul>
<figure class="highlight processing"><table><tr><td class="code"><pre><span class="line">psf ---&gt;<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span></span><br><span class="line">psfi ---&gt;<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span></span><br><span class="line">psfs ---&gt;<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span></span><br><span class="line">St ---&gt;<span class="keyword">String</span></span><br><span class="line">thr ---&gt;<span class="keyword">throw</span> <span class="keyword">new</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><em>Android studio 默认的是按Tab 自动生成代码块的，用户可以自己在setting—&gt;Live Templates里面进行设置expand style</em></p>
<h2 id="下面是一常用的Live_Templates的汇总说明">下面是一常用的Live Templates的汇总说明</h2>]]>
    
    </summary>
    
      <category term="studio" scheme="http://oakzmm.com/tags/studio/"/>
    
      <category term="Android Studio" scheme="http://oakzmm.com/categories/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://oakzmm.com/2015/07/16/hello-world/"/>
    <id>http://oakzmm.com/2015/07/16/hello-world/</id>
    <published>2015-07-16T08:44:36.264Z</published>
    <updated>2015-07-16T08:44:36.264Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.<br>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://oakzmm.com/tags/hexo/"/>
    
      <category term="hexo" scheme="http://oakzmm.com/categories/hexo/"/>
    
  </entry>
  
</feed>